/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Rental as PrismaRental } from "@prisma/client";

export class RentalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RentalCountArgs, "select">): Promise<number> {
    return this.prisma.rental.count(args);
  }

  async rentals(args: Prisma.RentalFindManyArgs): Promise<PrismaRental[]> {
    return this.prisma.rental.findMany(args);
  }
  async rental(
    args: Prisma.RentalFindUniqueArgs
  ): Promise<PrismaRental | null> {
    return this.prisma.rental.findUnique(args);
  }
  async createRental(args: Prisma.RentalCreateArgs): Promise<PrismaRental> {
    return this.prisma.rental.create(args);
  }
  async updateRental(args: Prisma.RentalUpdateArgs): Promise<PrismaRental> {
    return this.prisma.rental.update(args);
  }
  async deleteRental(args: Prisma.RentalDeleteArgs): Promise<PrismaRental> {
    return this.prisma.rental.delete(args);
  }
}
